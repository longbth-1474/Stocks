apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'dependencies.gradle'

android {
    compileSdkVersion configuration.compileSdkVersion
    defaultConfig {
        applicationId configuration.package
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        mapDiagnosticLocations = true
    }

    lintOptions {
        textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError false
        lintConfig file("$projectDir/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/MANIFEST.MF'
    }
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation kotlinLibrary
    implementation supportLibraries
    implementation androidArchLibraries
    implementation networkLibraries
    implementation rxJavaLibraries
    implementation daggerLibraries
    implementation sethoLibraries

    //k lint
    ktlint "com.github.shyiko:ktlint:0.23.1"

    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.1"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation 'com.mikepenz:fastadapter-commons:3.2.7'
    implementation "com.mikepenz:iconics-core:3.0.4@aar"
    implementation 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'


    kapt roomCompiler
    kapt annotationCompilerLibraries

    // Leak Canary
    debugImplementation leakDebug
    releaseImplementation leakRelease

    // test
    testImplementation junit
    androidTestImplementation testRunner
    androidTestImplementation expresso
}
